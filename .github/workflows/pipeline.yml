name: CI Pipeline

concurrency: corral

on:
  push:
    branches: [ main_vhive ]
    paths-ignore:
    - 'docs/**'
    - '**.md'
  pull_request:
    branches: [ main_vhive ]
    paths-ignore:
    - 'docs/**'
    - '**.md'
  workflow_dispatch:

env:
  GOOS: linux
  GO111MODULE: on

jobs:
  build:
    strategy:
      matrix:
        go: ['1.16']
      # Build all variants regardless of failures
      fail-fast: false

    name: Build and check code quality
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}

      - uses: actions/checkout@v2
        with:
          # to add commit DCO checks later
          fetch-depth: 21

      - name: Check formatting
        run: test -z $(gofmt -s -l .)

      - name: Configure AWS credentials using EASE lab account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-1

      - name: Check code
        uses: golangci/golangci-lint-action@v2
        with:
          args: --timeout 5m
        continue-on-error: true

      - name: Get dependencies
        run: |
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi

      - name: Build
        run: go build -race -v -a ./...

      - name: Run tests
        env:
          AWS_TEST_BUCKET: test-corral-bucket-ci
        run: go test -cover -race -v -a ./...

  # e2e-knative-local checks Knative backend LOCALLY.
  e2e-knative-local:
    name: E2E Knative (Local)
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - uses: actions/checkout@v2

      - uses: docker/setup-buildx-action@v1

      - name: Build Docker Image
        uses: docker/build-push-action@v2
        with:
          file: examples/word_count/Dockerfile
          load: true
          tags: vhiveease/word_count:local

      - name: Build
        working-directory: examples/word_count
        run: make word_count

      - name: Configure AWS credentials using EASE lab account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: us-west-1
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Start Daemon
        run: |
          docker run --env AWS_REGION="us-west-1" --env AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}" --env AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}" --env KNATIVE=1 -p 31080:80 --rm vhiveease/word_count:local --verbose --out s3://vhive-corral-bench/word_count/e2e-knative-local/out --knative &

      - name: Test
        working-directory: examples/word_count
        env:
          CORRAL_KNATIVEFUNCTIONNAME: local
        run: |
          ./bin/word_count --verbose --out s3://vhive-corral-bench/word_count/e2e-knative-local/out --knative s3://vhive-corral-bench/word_count/sample-inputs/metamorphosis.txt

      - name: Verify
        working-directory: examples/word_count
        run: |
          docker run --env AWS_REGION=us-west-1 --env AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} --env AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} --rm amazon/aws-cli s3 cp s3://vhive-corral-bench/word_count/e2e-knative-local/out/output-part-0 - | LC_ALL=C sort - | cmp expected-sorted-output.txt -

      - name: Clean up S3
        if: ${{ always() }}
        run: |
          docker run --env AWS_REGION=us-west-1 --env AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} --env AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} --rm amazon/aws-cli s3 rm s3://vhive-corral-bench/word_count/e2e-knative-local/out --recursive
